{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ywang\\\\Documents\\\\ThirdYearF2021\\\\CPSC471\\\\471Project\\\\Final Version\\\\Learning-Management-System\\\\src\\\\containers\\\\InstructorLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport LoaderButton from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { useAppContext } from \"../lib/contextLib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    userHasAuthenticated\n  } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  var [teacherid] = useState();\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n  /*\r\n  Handle onSubmit of Instructor, rest logic is same as Login\r\n  */\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    const loginAuth = () => {\n      fetch('/InsLogin/' + email + '/' + password).then(res => res.json()).then(json => setData(json));\n    };\n\n    loginAuth();\n    setIsLoading(false);\n  }\n\n  if (data.length !== 0) {\n    teacherid = data[0].teacherid;\n    userHasAuthenticated(true);\n    history.push('/InsHome/' + teacherid);\n    sessionStorage.setItem(\"teacherID\", teacherid);\n  } else {\n    userHasAuthenticated(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"username\",\n        size: \"lg\",\n        controlId: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"password\",\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoaderButton, {\n        className: \"Login-btn\",\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        isLoading: isLoading,\n        disabled: !validateForm(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"qlKG6D1f/s5Eq+5nGi4BrfZbOpk=\", false, function () {\n  return [useHistory, useAppContext];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/ywang/Documents/ThirdYearF2021/CPSC471/471Project/Final Version/Learning-Management-System/src/containers/InstructorLogin.js"],"names":["React","useState","Form","LoaderButton","useHistory","useAppContext","Login","history","email","setEmail","password","setPassword","userHasAuthenticated","isLoading","setIsLoading","data","setData","teacherid","validateForm","length","handleSubmit","event","preventDefault","loginAuth","fetch","then","res","json","push","sessionStorage","setItem","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport LoaderButton from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { useAppContext } from \"../lib/contextLib\";\r\n\r\nexport default function Login() {\r\n  const history=useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const {userHasAuthenticated}=useAppContext();\r\n  const [isLoading,setIsLoading]=useState(false);\r\n  const [data,setData]=useState([]);\r\n  var [teacherid] =useState();\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n  /*\r\n  Handle onSubmit of Instructor, rest logic is same as Login\r\n  */\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n      const loginAuth=()=>{\r\n        fetch('/InsLogin/'+email +'/'+password)\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n      }\r\n    loginAuth();\r\n    setIsLoading(false);\r\n  }\r\n    if(data.length!==0){\r\n      teacherid = data[0].teacherid;\r\n      userHasAuthenticated(true);\r\n      history.push('/InsHome/'+teacherid);\r\n      sessionStorage.setItem(\"teacherID\", teacherid);\r\n    }else{\r\n      userHasAuthenticated(false);\r\n    }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"username\" size=\"lg\" controlId=\"text\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"password\" size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <LoaderButton className=\"Login-btn\" block size=\"lg\" type=\"submit\" isLoading={isLoading} disabled={!validateForm()}>\r\n          Login\r\n        </LoaderButton>\r\n      </Form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}