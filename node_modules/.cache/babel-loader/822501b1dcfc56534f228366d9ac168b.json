{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ywang\\\\Documents\\\\ThirdYearF2021\\\\CPSC471\\\\471Project\\\\Final Version\\\\Learning-Management-System\\\\src\\\\Stu-container\\\\Handling\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload(props) {\n  _s();\n\n  const fileRef = useRef();\n\n  const HandleChange = e => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    let read = new FileReader();\n    read.readAsBinaryString(file);\n\n    read.onloadend = function () {\n      localStorage.setItem(sessionStorage.getItem(\"fileName\"), read.result.toString());\n    };\n  };\n\n  return props.type === \"Teacher\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => fileRef.current.click(),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileRef,\n      onChange: HandleChange,\n      multiple: false,\n      type: \"file\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"flag\",\n      style: {\n        margin: \"5px\",\n        display: \"none\"\n      },\n      children: \"Uploaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: async () => {\n        const response = await fetch('/teacher/' + sessionStorage.getItem('teacherID') + '/courses/' + sessionStorage.getItem('courseID') + '/content/', {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          },\n          body: JSON.stringify({\n            document_name: sessionStorage.getItem(\"fileName\"),\n            file: \"N/A\",\n            courseid: sessionStorage.getItem(\"courseID\"),\n            teacherid: sessionStorage.getItem('teacherID')\n          })\n        });\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => fileRef.current.click(),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileRef,\n      onChange: HandleChange,\n      multiple: false,\n      type: \"file\",\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"flag\",\n      style: {\n        margin: \"5px\",\n        display: \"none\"\n      },\n      children: \"Uploaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: async () => {\n        const response = await fetch('/students/' + sessionStorage.getItem(\"stuID\") + '/courses/' + sessionStorage.getItem(\"courseID\") + '/dropbox/', {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          },\n          body: JSON.stringify({\n            assignment_name: sessionStorage.getItem(\"fileName\"),\n            due_date: \"2022/1/1\",\n            content: localStorage.getItem(sessionStorage.getItem(\"fileName\")),\n            courseid: sessionStorage.getItem(\"courseID\")\n          })\n        });\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUpload, \"4UJHyBFm9OsKaahfnaT9HCATB1E=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/ywang/Documents/ThirdYearF2021/CPSC471/471Project/Final Version/Learning-Management-System/src/Stu-container/Handling/FileUpload.js"],"names":["React","useRef","useState","useEffect","Button","FileUpload","props","fileRef","HandleChange","e","preventDefault","file","target","files","read","FileReader","readAsBinaryString","onloadend","localStorage","setItem","sessionStorage","getItem","result","toString","type","current","click","margin","display","response","fetch","method","headers","body","JSON","stringify","document_name","courseid","teacherid","assignment_name","due_date","content"],"mappings":"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","sourcesContent":["import React, { useRef,useState,useEffect } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nfunction FileUpload(props) {\r\n    const fileRef = useRef();\r\n    const HandleChange = (e) => {\r\n      e.preventDefault();\r\n      const file = e.target.files[0];\r\n      let read = new FileReader();\r\n      read.readAsBinaryString(file);\r\n      read.onloadend = function(){\r\n        localStorage.setItem(sessionStorage.getItem(\"fileName\"), read.result.toString());\r\n      }\r\n    };\r\n\r\n    return (\r\n      props.type === \"Teacher\" ? (\r\n      <div>\r\n        <Button onClick={() => fileRef.current.click()}>\r\n          Upload\r\n        </Button>\r\n        <input\r\n          ref={fileRef}\r\n          onChange={HandleChange}\r\n          multiple={false}\r\n          type=\"file\"\r\n          hidden\r\n        />\r\n        <p id=\"flag\" style={{margin: \"5px\", display: \"none\"}}>Uploaded</p>\r\n        <Button \r\n         onClick={async()=>{\r\n           const response=await fetch('/teacher/'+sessionStorage.getItem('teacherID')+'/courses/'+sessionStorage.getItem('courseID')+'/content/',{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\" \r\n            },\r\n            body: JSON.stringify({\r\n              document_name: sessionStorage.getItem(\"fileName\"),\r\n              file: \"N/A\",\r\n              courseid: sessionStorage.getItem(\"courseID\"),\r\n              teacherid: sessionStorage.getItem('teacherID')\r\n          }\r\n          )\r\n        })\r\n          }\r\n        }>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n      ) : (\r\n        <div>\r\n        <Button onClick={() => fileRef.current.click()}>\r\n          Upload\r\n        </Button>\r\n        <input\r\n          ref={fileRef}\r\n          onChange={HandleChange}\r\n          multiple={false}\r\n          type=\"file\"\r\n          hidden\r\n        />\r\n        <p id=\"flag\" style={{margin: \"5px\", display: \"none\"}}>Uploaded</p>\r\n        <Button \r\n         onClick={async()=>{\r\n           const response=await fetch('/students/'+sessionStorage.getItem(\"stuID\")+'/courses/'+sessionStorage.getItem(\"courseID\")+'/dropbox/',{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\" \r\n            },\r\n            body: JSON.stringify({\r\n              assignment_name: sessionStorage.getItem(\"fileName\"),\r\n              due_date: \"2022/1/1\",\r\n              content: localStorage.getItem(sessionStorage.getItem(\"fileName\")),\r\n              courseid: sessionStorage.getItem(\"courseID\")\r\n          }\r\n          )\r\n        })\r\n          }\r\n        }>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n      )\r\n    );\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}