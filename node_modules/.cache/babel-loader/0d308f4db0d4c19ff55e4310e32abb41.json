{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ywang\\\\Documents\\\\ThirdYearF2021\\\\CPSC471\\\\471Project\\\\Final Version\\\\Learning-Management-System\\\\src\\\\Stu-container\\\\Course_Comp\\\\CourseBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../stu_main.css';\nimport Lecture from './Lecture';\nimport Dropbox from './Dropbox';\nimport EmailList from './EmailList';\nimport Evaluation from './Evaluation';\nimport FileUp from '../Handling/FileUpload';\nimport { ButtonGroup, ToggleButton, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CourseBody(props) {\n  _s();\n\n  const [teacher, setTeacher] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [data, setData] = useState([]);\n\n  const fetchStudents = () => {\n    fetch('/grades/' + sessionStorage.getItem('courseID') + '/' + sessionStorage.getItem('stuID') + '/finalgrade').then(res => res.json()).then(json => setData(json));\n  };\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  if (props.title === \"Lectures\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"courseTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search...\",\n        type: \"text\",\n        className: \"todo-input\",\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), props.lectureInfo.filter(data => {\n        if (searchTerm === \"\") {\n          return data;\n        } else if (data.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return data;\n        } else if (data.instructor.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return data;\n        }\n      }).map(data => /*#__PURE__*/_jsxDEV(Lecture, {\n        info: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (props.title === \"Content\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"courseTitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search...\",\n        type: \"text\",\n        className: \"todo-input\",\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), props.docInfo.filter(data => {\n        if (searchTerm === \"\") {\n          return data;\n        } else if (data.document_name.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return data;\n        }\n      }).map(data => /*#__PURE__*/_jsxDEV(Lecture, {\n        info: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 34\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (props.title === \"Dropboxes\") {\n    sessionStorage.setItem(\"fileName\", \"N/A\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"courseTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"File for Upload\",\n        name: \"file\",\n        onChange: e => sessionStorage.setItem(\"fileName\", e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FileUp, {\n        filename: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          background: '#d7e5f0',\n          boxShadow: '1px 1px 3px',\n          marginTop: \"10px\"\n        },\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"File Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Submission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), props.dropboxInfo.map(data => /*#__PURE__*/_jsxDEV(Dropbox, {\n        info: data,\n        uploaded: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 50\n      }, this)), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          background: '#d7e5f0',\n          boxShadow: '1px 1px 3px',\n          marginTop: \"10px\"\n        },\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: \"Final Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [data, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (props.title === \"Evaluations\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.data.map(item => item['isEval'] === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"courseTitle\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: props.teacherInfo.map((data, idx) => /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  type: \"radio\",\n                  variant: \"outline-primary\",\n                  name: \"radio\",\n                  id: `radio-${idx}`,\n                  value: data.tID,\n                  checked: teacher === data.tID,\n                  onClick: e => sessionStorage.setItem('teacherName', data.firstname),\n                  children: [data.firstname, \" \", data.lastname]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 72\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 67\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), props.evalInfo.map(data => /*#__PURE__*/_jsxDEV(Evaluation, {\n          info: data,\n          data: props.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 47\n        }, this))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"There are no evaluations avaiable at this time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (props.title === \"Emails\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"courseTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search...\",\n        type: \"text\",\n        className: \"todo-input\",\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"emailsTitle\",\n        children: \"Instructors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), props.teacherInfo.filter(data => {\n        if (searchTerm === \"\") {\n          return data;\n        } else if (data['firstname'].toLowerCase().includes(searchTerm.toLowerCase())) {\n          return data;\n        } else if (data['lastname'].toLowerCase().includes(searchTerm.toLowerCase())) {\n          return data;\n        }\n      }).map(data => /*#__PURE__*/_jsxDEV(EmailList, {\n        info: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 34\n      }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"emailsTitle\",\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), props.studentInfo.filter(data => {\n        if (searchTerm === \"\") {\n          return data;\n        } else if (data['firstname'].toLowerCase().includes(searchTerm.toLowerCase())) {\n          return data;\n        } else if (data['lastname'].toLowerCase().includes(searchTerm.toLowerCase())) {\n          return data;\n        }\n      }).map(data => /*#__PURE__*/_jsxDEV(EmailList, {\n        info: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 34\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(CourseBody, \"bpCVR1fY9m2mVQgdwCk8Z02tT/g=\");\n\n_c = CourseBody;\nexport default CourseBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseBody\");","map":{"version":3,"sources":["C:/Users/ywang/Documents/ThirdYearF2021/CPSC471/471Project/Final Version/Learning-Management-System/src/Stu-container/Course_Comp/CourseBody.js"],"names":["React","useState","useEffect","Lecture","Dropbox","EmailList","Evaluation","FileUp","ButtonGroup","ToggleButton","Container","Row","Col","CourseBody","props","teacher","setTeacher","searchTerm","setSearchTerm","data","setData","fetchStudents","fetch","sessionStorage","getItem","then","res","json","title","e","target","value","lectureInfo","filter","name","toLowerCase","includes","instructor","map","docInfo","document_name","setItem","background","boxShadow","marginTop","dropboxInfo","item","teacherInfo","idx","tID","firstname","lastname","evalInfo","studentInfo"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport '../stu_main.css';\r\nimport Lecture from './Lecture';\r\nimport Dropbox from './Dropbox';\r\nimport EmailList from './EmailList';\r\nimport Evaluation from './Evaluation';\r\nimport FileUp from '../Handling/FileUpload';\r\nimport { ButtonGroup, ToggleButton, Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction CourseBody(props) {\r\n    const [teacher, setTeacher] = useState();\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [data,setData] = useState([]);\r\n\r\n    const fetchStudents = ()=>{\r\n        fetch('/grades/'+sessionStorage.getItem('courseID')+'/'+sessionStorage.getItem('stuID') +'/finalgrade')\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n      }\r\n      useEffect(()=>{\r\n        fetchStudents();\r\n      },[]);\r\n\r\n    if (props.title === \"Lectures\") {\r\n        return (\r\n            <div className=\"courseTitle\">\r\n                <h1><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                {props.lectureInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } else if (data.instructor.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => <Lecture info={data} />)}\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Content\") {\r\n        return (\r\n            <div className=\"courseTitle\">\r\n                <h1><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                {props.docInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data.document_name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => <Lecture info={data} />)}\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Dropboxes\") {\r\n        sessionStorage.setItem(\"fileName\", \"N/A\");\r\n        return (\r\n            <div>\r\n                <h1 className=\"courseTitle\"><b>{props.title}</b></h1>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"File for Upload\"\r\n                    name=\"file\"\r\n                    onChange={(e) => sessionStorage.setItem(\"fileName\", e.target.value)}\r\n                />\r\n                <FileUp filename={searchTerm}/>\r\n                <Container style={{background: '#d7e5f0', boxShadow: '1px 1px 3px', marginTop: \"10px\"}} fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>File Name</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>Submission</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>Grade</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>Feedback</h4>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                {props.dropboxInfo.map((data) => <Dropbox info={data} uploaded={searchTerm} />)}\r\n                <Container style={{background: '#d7e5f0', boxShadow: '1px 1px 3px', marginTop: \"10px\"}} fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            Final Grade\r\n                        </Col>\r\n                        <Col>\r\n                            {data}%\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Evaluations\") {\r\n        return (\r\n            <div>\r\n                {\r\n            props.data.map((item)=>(\r\n              item['isEval'] === 1 ? (\r\n                  <>\r\n                <h1 className=\"courseTitle\"><b>{props.title}</b></h1>\r\n                <Container>\r\n                    <Row>\r\n                        <ButtonGroup>\r\n                            {props.teacherInfo.map((data, idx) => <Col><ToggleButton \r\n                                type=\"radio\" \r\n                                variant=\"outline-primary\" \r\n                                key={idx}\r\n                                name=\"radio\"\r\n                                id={`radio-${idx}`}\r\n                                value={data.tID}\r\n                                checked={teacher === data.tID}\r\n                                onClick={ (e) => sessionStorage.setItem('teacherName',data.firstname)}\r\n                                >\r\n                                {data.firstname} {data.lastname}\r\n                            </ToggleButton></Col>)}\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                </Container>\r\n                {props.evalInfo.map((data) => <Evaluation info={data} data={props.data} />)}\r\n                </>\r\n              ) : (\r\n                    <h4>There are no evaluations avaiable at this time</h4>\r\n              )\r\n              \r\n        ))\r\n        }\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Emails\") {\r\n        return (\r\n            <div>\r\n                <h1 className=\"courseTitle\"><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                <h4 className=\"emailsTitle\">Instructors</h4>\r\n                {props.teacherInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data['firstname'].toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } else if (data['lastname'].toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => <EmailList info={data} />)}\r\n                <h4 className=\"emailsTitle\">Students</h4>\r\n                {props.studentInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data['firstname'].toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } else if (data['lastname'].toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => <EmailList info={data} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseBody;"]},"metadata":{},"sourceType":"module"}