{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ywang\\\\Documents\\\\ThirdYearF2021\\\\CPSC471\\\\471Project\\\\Final Version\\\\Learning-Management-System\\\\src\\\\containers\\\\AdminPages\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport { withRouter } from \"react-router\";\nimport { useState, useEffect } from 'react';\nimport { Button, Form, Input } from \"semantic-ui-react\";\nimport Home from '../AdminHome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfilePage(props) {\n  _s();\n\n  const [courseID, setCourseID] = useState();\n  var [studentid] = useState(null);\n  const [firstName, setfirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [year, setYear] = useState('');\n  const [major, setMajor] = useState('');\n  var [data, setData] = useState([]);\n  const [stuData, setStuData] = useState([]);\n  const [stuCourses, setStuCourses] = useState([]);\n  var [dupli] = useState([]);\n\n  const fetchStudents = () => {\n    fetch('/students/' + props.match.params.username).then(res => res.json()).then(json => setData(json));\n  };\n\n  const fetchStuData = () => {\n    fetch('/students/' + props.match.params.username + '/stu').then(res => res.json()).then(json => setStuData(json));\n  };\n\n  const fetchStuCourses = () => {\n    fetch('/students/' + props.match.params.username + '/courses').then(res => res.json()).then(json => setStuCourses(json));\n  };\n\n  useEffect(() => {\n    fetchStudents();\n    fetchStuData();\n    fetchStuCourses();\n  }, []);\n\n  const onEdit = _ref => {\n    let {\n      currentFirstName,\n      currentLastName\n    } = _ref;\n    setfirstName(currentFirstName);\n    setLastName(currentLastName);\n  };\n\n  const onEdit2 = _ref2 => {\n    let {\n      currentMajor,\n      currentYear\n    } = _ref2;\n    setMajor(currentMajor);\n    setYear(currentYear);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Username: \", item['username']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary\",\n        onClick: () => onEdit({\n          username: item['username'],\n          currentFirstName: item['firstname'],\n          currentLastName: item['lastname']\n        }),\n        children: \"Set user defaults\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), stuData.map(item => (studentid = stuData[0]['studentID'], console.log(studentid), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" Major: \", item['major']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary\",\n        onClick: () => onEdit2({\n          currentMajor: item['major'],\n          currentYear: item['year']\n        }),\n        children: \"Set student defaults\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this))), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this), stuCourses.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Courses are: \", item['courseid'], \" \", item['name']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: firstName,\n          size: \"small\",\n          id: \"firstName\",\n          placeholder: \"Enter firstName\",\n          onChange: e => setfirstName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: lastName,\n          id: \"lastName\",\n          placeholder: \"Enter lastName\",\n          onChange: e => setLastName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => {\n            const newStuToAdd = {\n              firstName,\n              lastName\n            };\n            const response = await fetch('/students/' + props.match.params.username, {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(newStuToAdd)\n            });\n          },\n          children: \"Edit user information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      class: \"feilds\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: major,\n          id: \"major\",\n          placeholder: \"Enter major\",\n          onChange: e => setMajor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: year,\n          id: \"year\",\n          placeholder: \"Enter year\",\n          onChange: e => setYear(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => {\n            const newStuToAdd = {\n              major,\n              year\n            };\n            const response = await fetch('/students/' + props.match.params.username + '/stu', {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(newStuToAdd)\n            });\n          },\n          children: \"Edit student fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"major\",\n          placeholder: \"Enter courseID\",\n          onChange: e => setCourseID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => {\n            const newStuToAdd = {\n              courseID,\n              studentid\n            };\n            const response = await fetch('/students/' + props.match.params.username + '/courses', {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(newStuToAdd)\n            });\n          },\n          children: \"Add course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"courseID\",\n          placeholder: \"Enter courseID to delete\",\n          onChange: e => setCourseID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: async () => {\n            const newStuToAdd = {\n              courseID,\n              studentid\n            };\n            const response = await fetch('/students/' + props.match.params.username + '/courses', {\n              method: \"DELETE\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(newStuToAdd)\n            });\n          },\n          children: \"Remove course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ProfilePage, \"bnSTkDRkdIUbzTLbmMDAh3j3Bd8=\");\n\n_c = ProfilePage;\nexport default _c2 = withRouter(ProfilePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProfilePage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ywang/Documents/ThirdYearF2021/CPSC471/471Project/Final Version/Learning-Management-System/src/containers/AdminPages/ProfilePage.js"],"names":["withRouter","useState","useEffect","Button","Form","Input","Home","ProfilePage","props","courseID","setCourseID","studentid","firstName","setfirstName","lastName","setLastName","year","setYear","major","setMajor","data","setData","stuData","setStuData","stuCourses","setStuCourses","dupli","fetchStudents","fetch","match","params","username","then","res","json","fetchStuData","fetchStuCourses","onEdit","currentFirstName","currentLastName","onEdit2","currentMajor","currentYear","map","item","console","log","e","target","value","newStuToAdd","response","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import { withRouter } from \"react-router\";\r\nimport {useState,useEffect} from 'react'\r\nimport { Button, Form, Input } from \"semantic-ui-react\";\r\nimport Home from '../AdminHome';\r\n\r\n\r\nfunction ProfilePage(props)\r\n{\r\n    const [courseID,setCourseID]=useState();\r\n    var [studentid]=useState(null);\r\n    const [firstName,setfirstName]=useState('');\r\n    const [lastName, setLastName]=useState('');\r\n    const [year,setYear]=useState('');\r\n    const [major, setMajor]=useState('');\r\n    var [data, setData]=useState([]);\r\n    const [stuData,setStuData]=useState([]);\r\n    const[stuCourses,setStuCourses]=useState([]);\r\n    var [dupli]=useState([]);\r\n   const fetchStudents = ()=>{\r\n      fetch('/students/'+props.match.params.username)\r\n      .then(res=>res.json())\r\n      .then(json=>setData(json));\r\n  }\r\n  const fetchStuData=()=>{\r\n      fetch('/students/'+props.match.params.username+'/stu')\r\n      .then(res=>res.json())\r\n      .then(json=>setStuData(json));\r\n  }\r\n  const fetchStuCourses=()=>{\r\n    fetch('/students/'+props.match.params.username+'/courses')\r\n    .then(res=>res.json())\r\n    .then(json=>setStuCourses(json));\r\n}\r\n  useEffect(()=>{\r\n      fetchStudents();\r\n      fetchStuData();\r\n      fetchStuCourses();\r\n  },[]);\r\n\r\n  const onEdit=({currentFirstName,currentLastName})=>{\r\n    setfirstName(currentFirstName);\r\n    setLastName(currentLastName);\r\n}\r\nconst onEdit2=({currentMajor,currentYear})=>{\r\n    setMajor(currentMajor);\r\n    setYear(currentYear);\r\n}\r\n  return(\r\n  <div className=\"container\">\r\n      <Home/>\r\n    {\r\n    data.map((item)=>( \r\n        <div>\r\n        <h1 > Username: {item['username']}</h1>\r\n        <button\r\n        className={\"btn-primary\"}\r\n        onClick={()=> onEdit({\r\n            username: item['username'],\r\n            currentFirstName: item['firstname'],\r\n            currentLastName: item['lastname']\r\n        })}\r\n        >\r\n        Set user defaults\r\n        </button>\r\n        </div>\r\n    ))\r\n  }\r\n  {\r\n    stuData.map((item)=>(  \r\n        studentid=stuData[0]['studentID'],\r\n        console.log(studentid),\r\n        <div>\r\n        <h1 > Major: {item['major']}</h1>\r\n        <button\r\n        className={\"btn-primary\"}\r\n        onClick={()=> onEdit2({\r\n            currentMajor: item['major'],\r\n            currentYear: item['year']\r\n        })}\r\n        >\r\n        Set student defaults\r\n        </button>\r\n        </div>\r\n    ))\r\n  }\r\n  <br></br>\r\n  {\r\n      stuCourses.map((item)=>\r\n      <div>\r\n          <h1>Courses are: {item['courseid']} {item['name']}</h1>\r\n      </div>\r\n        )\r\n  }\r\n  <Form>\r\n            <Form.Field> \r\n            <Input value={firstName}\r\n            size=\"small\"\r\n                id=\"firstName\"\r\n                placeholder={\"Enter firstName\"}\r\n                onChange={e=>setfirstName(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n            <Input value={lastName}\r\n                id=\"lastName\"\r\n                placeholder={\"Enter lastName\"}\r\n                onChange={e=>setLastName(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n                    <Button  onClick={async()=>{\r\n        const newStuToAdd={firstName,lastName};\r\n        const response=await fetch('/students/'+props.match.params.username,{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Edit user information\r\n    </Button>\r\n     </Form.Field>\r\n        </Form>\r\n    <Form class=\"feilds\">\r\n    <Form.Field>\r\n            <Input value={major}\r\n                id=\"major\"\r\n                placeholder={\"Enter major\"}\r\n                onChange={e=>setMajor(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n            <Input value={year}\r\n                id=\"year\"\r\n                placeholder={\"Enter year\"}\r\n                onChange={e=>setYear(e.target.value)}></Input>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n                    <Button  onClick={async()=>{\r\n        const newStuToAdd={major,year};\r\n        const response=await fetch('/students/'+props.match.params.username+'/stu',{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Edit student fields\r\n    </Button>\r\n     </Form.Field>\r\n        <Form.Field>\r\n        <Input \r\n                id=\"major\"\r\n                placeholder={\"Enter courseID\"}\r\n                onChange={e=>setCourseID(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n            <Button  onClick={async()=>{\r\n                        \r\n        const newStuToAdd={courseID,studentid};\r\n        const response=await fetch('/students/'+props.match.params.username+'/courses',{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Add course\r\n    </Button>\r\n        </Form.Field><br/>\r\n        <Form.Field>\r\n        <Input \r\n                id=\"courseID\"\r\n                placeholder={\"Enter courseID to delete\"}\r\n                onChange={e=>setCourseID(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n            <Button  onClick={async()=>{\r\n        const newStuToAdd={courseID,studentid};\r\n        const response=await fetch('/students/'+props.match.params.username+'/courses',{\r\n            method: \"DELETE\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Remove course\r\n    </Button>\r\n    </Form.Field>\r\n    </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ProfilePage)"]},"metadata":{},"sourceType":"module"}