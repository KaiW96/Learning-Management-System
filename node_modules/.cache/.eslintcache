[{"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\index.js":"1","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\config.js":"2","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\App.js":"3","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Routes.js":"4","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\lib\\contextLib.js":"5","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\NotFound.js":"6","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\Home.js":"7","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\Login.js":"8","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminLogin.js":"9","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\InstructorLogin.js":"10","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminHome.js":"11","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\Students.js":"12","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\Instructor.js":"13","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\evaluations.js":"14","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\InsProfilePage.js":"15","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\bestTeacher.js":"16","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\ProfilePage.js":"17","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\recieveEvaluations.js":"18","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\worstTeacher.js":"19","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\evaluationMethods.js":"20","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\StuHome.js":"21","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_main.js":"22","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Sections\\EvaluationSec.js":"23","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Sections\\ContentSec.js":"24","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Sections\\ClassListSec.js":"25","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\StuProflie.js":"26","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsHome.js":"27","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Sections\\DropboxSec.js":"28","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsCourseHome.js":"29","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\InsProfile.js":"30","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\ContentPage.js":"31","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\ClassListPage.js":"32","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\Schedule.js":"33","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\AssignmentPage.js":"34","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\lib\\errorLib.js":"35","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\PageBody.js":"36","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\Banner.js":"37","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\GenNav.js":"38","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\InsCourse.js":"39","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\components\\LoaderButton.js":"40","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Todo_Comp\\Form.js":"41","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Todo_Comp\\TodoList.js":"42","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\CourseBody.js":"43","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\Courses.js":"44","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\Lecture.js":"45","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\EmailList.js":"46","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Handling\\FileDownload.js":"47","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\EditComp\\DelDoc.js":"48","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\EditComp\\AddDoc.js":"49","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\EditComp\\GradeItem.js":"50","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Todo_Comp\\Todo.js":"51","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Handling\\FileUpload.js":"52","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\CourseCard.js":"53","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\Evaluation.js":"54","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\Dropbox.js":"55"},{"size":1043,"mtime":1640663001421,"results":"56","hashOfConfig":"57"},{"size":690,"mtime":1640663001343,"results":"58","hashOfConfig":"57"},{"size":2432,"mtime":1640663001294,"results":"59","hashOfConfig":"57"},{"size":4580,"mtime":1640663001463,"results":"60","hashOfConfig":"57"},{"size":173,"mtime":1640663002636,"results":"61","hashOfConfig":"57"},{"size":208,"mtime":1640663001704,"results":"62","hashOfConfig":"57"},{"size":1626,"mtime":1640663001598,"results":"63","hashOfConfig":"57"},{"size":2173,"mtime":1640663001663,"results":"64","hashOfConfig":"57"},{"size":2285,"mtime":1640663001557,"results":"65","hashOfConfig":"57"},{"size":2189,"mtime":1640663001620,"results":"66","hashOfConfig":"57"},{"size":578,"mtime":1640663001535,"results":"67","hashOfConfig":"57"},{"size":1340,"mtime":1640663001905,"results":"68","hashOfConfig":"57"},{"size":1361,"mtime":1640663001824,"results":"69","hashOfConfig":"57"},{"size":1411,"mtime":1640663001780,"results":"70","hashOfConfig":"57"},{"size":4625,"mtime":1640663001802,"results":"71","hashOfConfig":"57"},{"size":501,"mtime":1640663001735,"results":"72","hashOfConfig":"57"},{"size":5918,"mtime":1640663001846,"results":"73","hashOfConfig":"57"},{"size":2180,"mtime":1640663001867,"results":"74","hashOfConfig":"57"},{"size":505,"mtime":1640663001950,"results":"75","hashOfConfig":"57"},{"size":945,"mtime":1640663001758,"results":"76","hashOfConfig":"57"},{"size":898,"mtime":1640663002868,"results":"77","hashOfConfig":"57"},{"size":1673,"mtime":1640663002737,"results":"78","hashOfConfig":"57"},{"size":1490,"mtime":1640663003475,"results":"79","hashOfConfig":"57"},{"size":1042,"mtime":1640663003425,"results":"80","hashOfConfig":"57"},{"size":1430,"mtime":1640663003398,"results":"81","hashOfConfig":"57"},{"size":1988,"mtime":1640663003256,"results":"82","hashOfConfig":"57"},{"size":779,"mtime":1640663002331,"results":"83","hashOfConfig":"57"},{"size":1163,"mtime":1640663003449,"results":"84","hashOfConfig":"57"},{"size":723,"mtime":1640663002308,"results":"85","hashOfConfig":"57"},{"size":1999,"mtime":1640663002558,"results":"86","hashOfConfig":"57"},{"size":1181,"mtime":1640663002498,"results":"87","hashOfConfig":"57"},{"size":1163,"mtime":1640663002477,"results":"88","hashOfConfig":"57"},{"size":1679,"mtime":1640663003051,"results":"89","hashOfConfig":"57"},{"size":1091,"mtime":1640663002454,"results":"90","hashOfConfig":"57"},{"size":249,"mtime":1640663002668,"results":"91","hashOfConfig":"57"},{"size":6245,"mtime":1640663002593,"results":"92","hashOfConfig":"57"},{"size":888,"mtime":1640663003157,"results":"93","hashOfConfig":"57"},{"size":2779,"mtime":1640663003241,"results":"94","hashOfConfig":"57"},{"size":1225,"mtime":1640663002528,"results":"95","hashOfConfig":"57"},{"size":513,"mtime":1640663002047,"results":"96","hashOfConfig":"57"},{"size":1173,"mtime":1640663003509,"results":"97","hashOfConfig":"57"},{"size":483,"mtime":1640663003554,"results":"98","hashOfConfig":"57"},{"size":7404,"mtime":1640663002904,"results":"99","hashOfConfig":"57"},{"size":573,"mtime":1640663003214,"results":"100","hashOfConfig":"57"},{"size":587,"mtime":1640663003022,"results":"101","hashOfConfig":"57"},{"size":619,"mtime":1640663002961,"results":"102","hashOfConfig":"57"},{"size":523,"mtime":1640663003092,"results":"103","hashOfConfig":"57"},{"size":1149,"mtime":1640663002403,"results":"104","hashOfConfig":"57"},{"size":1079,"mtime":1640663002381,"results":"105","hashOfConfig":"57"},{"size":2837,"mtime":1640663002424,"results":"106","hashOfConfig":"57"},{"size":969,"mtime":1640663003533,"results":"107","hashOfConfig":"57"},{"size":2706,"mtime":1640663003120,"results":"108","hashOfConfig":"57"},{"size":1921,"mtime":1640663003187,"results":"109","hashOfConfig":"57"},{"size":5934,"mtime":1640663002993,"results":"110","hashOfConfig":"57"},{"size":785,"mtime":1640663002936,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"il1ew5",{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\index.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\config.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\App.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Routes.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\lib\\contextLib.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\NotFound.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\Home.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\Login.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminLogin.js",["251"],"import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport LoaderButton from \"./components/LoaderButton\";\r\nimport \"./Login.css\";\r\nimport { useAppContext } from \"../lib/contextLib\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {onError} from \"../lib/errorLib\";\r\n\r\n\r\nexport default function Login() {\r\n  const history=useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const {userHasAuthenticated}=useAppContext();\r\n  const [isLoading,setIsLoading]=useState(false);\r\n  const [data,setData] = useState([]);\r\n  var studentID =0;\r\n\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0;\r\n  }\r\n\r\n//Handle onSubmit for Admin Login and, rest is the same as Login\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n      const loginAuth=()=>{\r\n        fetch('/AdminLogin/'+email+'/'+password)\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n      }\r\n    loginAuth();\r\n    setIsLoading(false);\r\n  }\r\n\r\n  if(data.length!==0){\r\n    studentID = data[0].adminid;\r\n    userHasAuthenticated(true);\r\n    history.push('/adminhome/'+studentID);\r\n    sessionStorage.setItem(\"AdminId\", studentID);\r\n  }else{\r\n    userHasAuthenticated(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"username\" size=\"lg\" controlId=\"email\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"password\" size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <LoaderButton\r\n          className=\"Login-btn\"\r\n          block\r\n          size=\"lg\"\r\n          type=\"submit\"\r\n          isLoading={isLoading}\r\n          disabled={!validateForm()}\r\n        >\r\n        Login\r\n        </LoaderButton>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\InstructorLogin.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminHome.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\Students.js",["252"],"import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport \"./Students.css\"\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Home from '../AdminHome';\r\n\r\nfunction App (){\r\n   const [data, setData]=useState([]);\r\n   const fetchStudents = ()=>{\r\n      fetch('/students')\r\n      .then(res=>res.json())\r\n      .then(json=>setData(json));\r\n  }\r\n  useEffect(()=>{\r\n      fetchStudents();\r\n  },[]);\r\n  return (\r\n   <div className=\"container\">\r\n       <Home/>\r\n       <h1 style={{alignContent: 'center'}}> Student List </h1>\r\n       <BrowserRouter>\r\n       <table>\r\n           <thead>\r\n               <tr>\r\n                   <th>First Name</th>\r\n                   <th>Username</th>\r\n                   <th>Profile </th>\r\n               </tr>\r\n           </thead>\r\n           <tbody>\r\n              {\r\n                 data.map((item)=>(\r\n                     console.log(item),\r\n                    <tr key={item['username']}>\r\n                     <td>{item['firstname']}</td>\r\n                     <td> {item['username']}</td>\r\n                     <td><div><a href={item['username']}>Profile</a></div>\r\n                      </td>\r\n                     </tr>\r\n                 ))\r\n              }\r\n           </tbody>\r\n         </table>\r\n         </BrowserRouter>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\Instructor.js",["253"],"import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport \"./Students.css\"\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Home from '../AdminHome';\r\n\r\nfunction App (){\r\n   const [data, setData]=useState([]);\r\n   const fetchInstructors = ()=>{\r\n      fetch('/instructors')\r\n      .then(res=>res.json())\r\n      .then(json=>setData(json));\r\n  }\r\n  useEffect(()=>{\r\n      fetchInstructors();\r\n  },[]);\r\n\r\n  return (\r\n   <div className=\"container\">\r\n       <Home/>\r\n       <h1 style={{alignContent: 'center'}}> Instructor List </h1>\r\n       <BrowserRouter>\r\n       <table>\r\n           <thead>\r\n               <tr>\r\n                   <th>First Name</th>\r\n                   <th>Username</th>\r\n                   <th>Profile </th>\r\n               </tr>\r\n           </thead>\r\n           <tbody>\r\n              {\r\n                 data.map((item)=>(\r\n                     console.log(item.length),\r\n                    <tr key={item['username']}>\r\n                     <td>{item['firstname']}</td>\r\n                     <td> {item['username']}</td>\r\n                     <td><div><a href={item['username']}>Profile</a></div>\r\n                      </td>\r\n                     </tr>\r\n                 ))\r\n              }\r\n           </tbody>\r\n         </table>\r\n         </BrowserRouter>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\evaluations.js",["254"],"import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport \"./Students.css\"\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Home from '../AdminHome';\r\n\r\nfunction App (){\r\n   const [data, setData]=useState([]);\r\n   const fetchCourses = ()=>{\r\n      fetch('/courses/sendEvaluations/')\r\n      .then(res=>res.json())\r\n      .then(json=>setData(json));\r\n  }\r\n  useEffect(()=>{\r\n      fetchCourses();\r\n  },[]);\r\n  return (\r\n   <div className=\"container\">\r\n       <Home/>\r\n       <h1 style={{alignContent: 'center'}}> Course List </h1>\r\n       <BrowserRouter>\r\n       <table>\r\n           <thead>\r\n               <tr>\r\n                   <th>Course code</th>\r\n                   <th> Course name</th>\r\n                   <th>Evalutions</th>\r\n               </tr>\r\n           </thead>\r\n           <tbody>\r\n              {\r\n                 data.map((item)=>(\r\n                     console.log(item.length),\r\n                     console.log(item),\r\n                    <tr key={item['courseid']}>\r\n                     <td>{item['courseid']}</td>\r\n                     <td>{item['name']}</td>\r\n                     <td><div><a href={item['courseid']}>Send Evaluations</a></div>\r\n                      </td>\r\n                     </tr>\r\n                 ))\r\n              }\r\n           </tbody>\r\n         </table>\r\n         </BrowserRouter>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\InsProfilePage.js",["255","256","257","258"],"import { withRouter } from \"react-router\";\r\nimport {useState,useEffect} from 'react'\r\nimport { Button, Form, Input } from \"semantic-ui-react\";\r\nimport Home from '../AdminHome';\r\n\r\nfunction InsProfile(props)\r\n{\r\n    const [courseID,setCourseID]=useState();\r\n    var [teacherid]=useState([]);\r\n    const [firstName,setfirstName]=useState('');\r\n    const [lastName, setLastName]=useState('');\r\n    var [data, setData]=useState([]);\r\n    const [stuData,setStuData]=useState([]);\r\n    const[stuCourses,setStuCourses]=useState([]);\r\n    var teacherID = useState();\r\n    var [dupli]=useState([]);\r\n   const fetchinstructors = ()=>{\r\n      fetch('/instructors/'+props.match.params.username)\r\n      .then(res=>res.json())\r\n      .then(json=>setData(json));\r\n  }\r\n  const fetchStuData=()=>{\r\n      fetch('/instructors/'+props.match.params.username+'/ins')\r\n      .then(res=>res.json())\r\n      .then(json=>setStuData(json));\r\n  }\r\n  const fetchStuCourses=()=>{\r\n    fetch('/instructors/'+props.match.params.username+'/courses')\r\n    .then(res=>res.json())\r\n    .then(json=>setStuCourses(json));\r\n}\r\n  useEffect(()=>{\r\n      fetchinstructors();\r\n      fetchStuData();\r\n      fetchStuCourses();\r\n  },[]);\r\n  dupli=[].concat(...stuData);\r\n  teacherid=dupli[0];\r\n  const onEdit=({currentFirstName,currentLastName})=>{\r\n    setfirstName(currentFirstName);\r\n    setLastName(currentLastName);\r\n}\r\n  return(\r\n  <div>\r\n      <Home/>\r\n    {\r\n    data.map((item)=>(  \r\n        <div>\r\n        <h1 > Username: {item['username']}</h1>\r\n        <button\r\n        className={\"btn-primary\"}\r\n        onClick={()=> onEdit({\r\n            username: item['username'],\r\n            currentFirstName: item['firstname'],\r\n            currentLastName: item['lastname']\r\n        })}\r\n        >\r\n        Set user defaults\r\n        </button>\r\n        </div>\r\n    ))\r\n  }\r\n  {\r\n    stuData.map((item)=>(\r\n        <div>\r\n        <h1 > Role: {item['isTA']}</h1>\r\n        \r\n        </div>\r\n    ))\r\n  }\r\n  <br></br>\r\n  {\r\n      stuCourses.map((item)=>\r\n      <div>\r\n          <h1>Courses taught are : {item['courseid']} {item['name']}</h1>\r\n      </div>    \r\n        )\r\n  }\r\n  <Form>\r\n            <Form.Field> \r\n            <Input value={firstName}\r\n            size=\"small\"\r\n                id=\"firstName\"\r\n                placeholder={\"Enter firstName\"}\r\n                onChange={e=>setfirstName(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n            <Input value={lastName}\r\n                id=\"lastName\"\r\n                placeholder={\"Enter lastName\"}\r\n                onChange={e=>setLastName(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n                    <Button  onClick={async()=>{\r\n        const newStuToAdd={firstName,lastName};\r\n        const response=await fetch('/instructors/'+props.match.params.username,{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Edit user information\r\n    </Button>\r\n     </Form.Field>\r\n        </Form>\r\n    <Form>\r\n        <Form.Field>\r\n        <Input \r\n                id=\"major\"\r\n                placeholder={\"Enter courseID\"}\r\n                onChange={e=>setCourseID(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n            <Button  onClick={async()=>{\r\n                teacherID = teacherid['teacherid'];\r\n        const newStuToAdd={courseID,teacherID};\r\n        const response=await fetch('/instructors/'+props.match.params.username+'/courses',{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Add course\r\n    </Button>\r\n        </Form.Field>\r\n        <Form.Field>\r\n        <Input \r\n                id=\"courseID\"\r\n                placeholder={\"Enter courseID to delete\"}\r\n                onChange={e=>setCourseID(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n            <Button  onClick={async()=>{\r\n        const newStuToAdd={courseID,teacherid};\r\n        const response=await fetch('/instructors/'+props.match.params.username+'/courses',{\r\n            method: \"DELETE\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Remove course\r\n    </Button>\r\n        </Form.Field>\r\n    </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(InsProfile)","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\bestTeacher.js",["259"],"import {useState,useEffect} from 'react'\r\nimport { withRouter } from 'react-router';\r\n\r\nfunction BestTeacher(props){\r\n    const [data,setData]=useState([]);\r\n    const fetchinstructors = ()=>{\r\n        fetch('/bestTeacher/'+props.match.params.courseID)\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n    }\r\n    useEffect(()=>{\r\n        fetchinstructors();\r\n    },[]);\r\n    return(\r\n        <h1>The best Teacher is {data}</h1>\r\n    );\r\n}\r\n\r\nexport default withRouter(BestTeacher)","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\ProfilePage.js",["260","261","262","263","264","265","266"],"import { withRouter } from \"react-router\";\r\nimport {useState,useEffect} from 'react'\r\nimport { Button, Form, Input } from \"semantic-ui-react\";\r\nimport Home from '../AdminHome';\r\n\r\n\r\nfunction ProfilePage(props)\r\n{\r\n    const [courseID,setCourseID]=useState();\r\n    var [studentid]=useState(null);\r\n    const [firstName,setfirstName]=useState('');\r\n    const [lastName, setLastName]=useState('');\r\n    const [year,setYear]=useState('');\r\n    const [major, setMajor]=useState('');\r\n    var [data, setData]=useState([]);\r\n    const [stuData,setStuData]=useState([]);\r\n    const[stuCourses,setStuCourses]=useState([]);\r\n    var [dupli]=useState([]);\r\n   const fetchStudents = ()=>{\r\n      fetch('/students/'+props.match.params.username)\r\n      .then(res=>res.json())\r\n      .then(json=>setData(json));\r\n  }\r\n  const fetchStuData=()=>{\r\n      fetch('/students/'+props.match.params.username+'/stu')\r\n      .then(res=>res.json())\r\n      .then(json=>setStuData(json));\r\n  }\r\n  const fetchStuCourses=()=>{\r\n    fetch('/students/'+props.match.params.username+'/courses')\r\n    .then(res=>res.json())\r\n    .then(json=>setStuCourses(json));\r\n}\r\n  useEffect(()=>{\r\n      fetchStudents();\r\n      fetchStuData();\r\n      fetchStuCourses();\r\n  },[]);\r\n\r\n  const onEdit=({currentFirstName,currentLastName})=>{\r\n    setfirstName(currentFirstName);\r\n    setLastName(currentLastName);\r\n}\r\nconst onEdit2=({currentMajor,currentYear})=>{\r\n    setMajor(currentMajor);\r\n    setYear(currentYear);\r\n}\r\n  return(\r\n  <div className=\"container\">\r\n      <Home/>\r\n    {\r\n    data.map((item)=>( \r\n        <div>\r\n        <h1 > Username: {item['username']}</h1>\r\n        <button\r\n        className={\"btn-primary\"}\r\n        onClick={()=> onEdit({\r\n            username: item['username'],\r\n            currentFirstName: item['firstname'],\r\n            currentLastName: item['lastname']\r\n        })}\r\n        >\r\n        Set user defaults\r\n        </button>\r\n        </div>\r\n    ))\r\n  }\r\n  {\r\n    stuData.map((item)=>(  \r\n        studentid=stuData[0]['studentID'],\r\n        console.log(studentid),\r\n        <div>\r\n        <h1 > Major: {item['major']}</h1>\r\n        <button\r\n        className={\"btn-primary\"}\r\n        onClick={()=> onEdit2({\r\n            currentMajor: item['major'],\r\n            currentYear: item['year']\r\n        })}\r\n        >\r\n        Set student defaults\r\n        </button>\r\n        </div>\r\n    ))\r\n  }\r\n  <br></br>\r\n  {\r\n      stuCourses.map((item)=>\r\n      <div>\r\n          <h1>Courses are: {item['courseid']} {item['name']}</h1>\r\n      </div>\r\n        )\r\n  }\r\n  <Form>\r\n            <Form.Field> \r\n            <Input value={firstName}\r\n            size=\"small\"\r\n                id=\"firstName\"\r\n                placeholder={\"Enter firstName\"}\r\n                onChange={e=>setfirstName(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n            <Input value={lastName}\r\n                id=\"lastName\"\r\n                placeholder={\"Enter lastName\"}\r\n                onChange={e=>setLastName(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n                    <Button  onClick={async()=>{\r\n        const newStuToAdd={firstName,lastName};\r\n        const response=await fetch('/students/'+props.match.params.username,{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Edit user information\r\n    </Button>\r\n     </Form.Field>\r\n        </Form>\r\n    <Form class=\"feilds\">\r\n    <Form.Field>\r\n            <Input value={major}\r\n                id=\"major\"\r\n                placeholder={\"Enter major\"}\r\n                onChange={e=>setMajor(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field>\r\n            <Input value={year}\r\n                id=\"year\"\r\n                placeholder={\"Enter year\"}\r\n                onChange={e=>setYear(e.target.value)}></Input>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n                    <Button  onClick={async()=>{\r\n        const newStuToAdd={major,year};\r\n        const response=await fetch('/students/'+props.match.params.username+'/stu',{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Edit student fields\r\n    </Button>\r\n     </Form.Field>\r\n        <Form.Field>\r\n        <Input \r\n                id=\"major\"\r\n                placeholder={\"Enter courseID\"}\r\n                onChange={e=>setCourseID(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n            <Button  onClick={async()=>{\r\n                        \r\n        const newStuToAdd={courseID,studentid};\r\n        const response=await fetch('/students/'+props.match.params.username+'/courses',{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Add course\r\n    </Button>\r\n        </Form.Field><br/>\r\n        <Form.Field>\r\n        <Input \r\n                id=\"courseID\"\r\n                placeholder={\"Enter courseID to delete\"}\r\n                onChange={e=>setCourseID(e.target.value)}/>\r\n            </Form.Field>\r\n            <Form.Field type=\"submit\">\r\n            <Button  onClick={async()=>{\r\n        const newStuToAdd={courseID,studentid};\r\n        const response=await fetch('/students/'+props.match.params.username+'/courses',{\r\n            method: \"DELETE\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)\r\n        })\r\n    }}>\r\n        Remove course\r\n    </Button>\r\n    </Form.Field>\r\n    </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ProfilePage)","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\recieveEvaluations.js",["267","268"],"import { withRouter } from \"react-router\";\r\nimport {useState,useEffect} from 'react'\r\nimport \"./Students.css\"\r\nimport Home from '../AdminHome';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction RecieveEvaluations(props)\r\n{\r\n    var [data,setData]=useState([]);\r\n    const fetchinstructors = ()=>{\r\n        fetch('/courses/recieveEvaluations/'+props.match.params.courseID)\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n    }\r\n    useEffect(()=>{\r\n        fetchinstructors();\r\n    },[]);\r\n  return(\r\n    <div>\r\n        <Home/>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Teacher ID</th>     \r\n                    <th>Student ID</th>\r\n                    <th>Q1</th>\r\n                    <th>Q2</th>\r\n                    <th>Q3</th>\r\n                    <th>Q4</th>\r\n                    <th>Q5</th>\r\n                    <th>Q6</th>\r\n                    <th>Q7</th>\r\n                    <th>Q8</th>\r\n                    <th>Q9</th>\r\n                    <th>Q10</th>\r\n                    <th>Comments</th>\r\n                </tr>\r\n            </thead>\r\n        <tbody>\r\n        {\r\n            data.map((item)=>(\r\n                console.log(item),\r\n                <tr key={item['teacherid']}>\r\n                <td>{item['teacherid']}</td>\r\n                <td>{item['studentid']}</td>\r\n                <td>{item['Q1']}</td>\r\n                <td>{item['Q2']}</td>\r\n                <td>{item['Q3']}</td>\r\n                <td>{item['Q4']}</td>\r\n                <td>{item['Q5']}</td>\r\n                <td>{item['Q6']}</td>\r\n                <td>{item['Q7']}</td>\r\n                <td>{item['Q8']}</td>\r\n                <td>{item['Q9']}</td>\r\n                <td>{item['Q10']}</td>\r\n                <td>{item['comment']}</td>\r\n                </tr>\r\n                ))\r\n        }\r\n        </tbody>\r\n        </table>\r\n        <Button href={\"bestTeacher/\"+props.match.params.courseID}>\r\n            Get Best Teacher\r\n        </Button>\r\n        <Button href={\"worstTeacher/\"+props.match.params.courseID}>\r\n            Get Worst Teacher\r\n        </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(RecieveEvaluations)","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\worstTeacher.js",["269"],"import {useState,useEffect} from 'react'\r\nimport { withRouter } from 'react-router';\r\n\r\nfunction WorstTeacher(props){\r\n    const [data,setData]=useState([]);\r\n    const fetchinstructors = ()=>{\r\n        fetch('/worstTeacher/'+props.match.params.courseID)\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n    }\r\n    useEffect(()=>{\r\n        fetchinstructors();\r\n    },[]);\r\n    return(\r\n        <h1>The worst Teacher is {data}</h1>\r\n    );\r\n}\r\n\r\nexport default withRouter(WorstTeacher)","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\AdminPages\\evaluationMethods.js",["270","271","272","273","274","275","276"],"import { withRouter } from \"react-router\";\r\nimport {useState,useEffect} from 'react'\r\nimport { Form } from \"react-bootstrap\";\r\nimport {Button as Button2} from 'react-bootstrap'\r\nimport Home from '../AdminHome';\r\n\r\n\r\nfunction EvaluationMethods(props)\r\n{\r\n    var [courseid,setCourseid]=useState(null);\r\n    const [data,setData]=useState([]);\r\n    courseid=props.match.params.courseID;\r\n  return(\r\n      <div>\r\n        <Home/>\r\n  <Button2 onClick={async()=>{\r\n        const response=await fetch('/courses/sendEvaluations/'+props.match.params.courseID,{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify()\r\n        })\r\n    }}>\r\n      Send evaluations\r\n  </Button2><br/><br/>\r\n  <Button2 href={\"recieve/\"+props.match.params.courseID}>\r\n    Recieve Evaluations\r\n  </Button2>\r\n   \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(EvaluationMethods)","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\StuHome.js",["277"],"import './stu_main.css';\r\nimport React from 'react';\r\nimport { useState,useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Banner from \"./Home_Comp/Banner\";\r\nimport GenNav from \"./Home_Comp/GenNav\";\r\nimport Courses from \"./Home_Comp/Courses\";\r\nimport GenData from \"./gen_db.json\";\r\n\r\nfunction StuHome() {\r\n    const [data, setData]=useState([]);\r\n    const fetchStudents = ()=>{\r\n      fetch('/students/'+sessionStorage.getItem(\"stuID\")+'/courseList/')\r\n      .then(res=>res.json())\r\n      .then(json=>setData(json));\r\n    }\r\n    useEffect(()=>{\r\n      fetchStudents();\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            <Banner bannerData={GenData.Banner} user=\"Student\"/>\r\n            {/* <GenNav navData={GenData.homeNav}/> */}\r\n            <Courses courseInfo={data}/>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StuHome;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_main.js",["278"],"import './stu_main.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Banner from \"./Home_Comp/Banner\";\r\nimport GenNav from \"./Home_Comp/GenNav\";\r\nimport CourseBody from \"./Course_Comp/CourseBody\";\r\nimport Schedule from './Course_Comp/Schedule';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport GenData from \"./gen_db.json\";\r\nimport {withRouter} from 'react-router';\r\n\r\nfunction Course_main(props){\r\n    {GenData.stuNav.destination.map((data) => sessionStorage.setItem(data.title, GenData.stuNav.platformPath+sessionStorage.getItem(\"stuID\")+GenData.stuNav.start+props.match.params.courseID+data.path))};\r\n    sessionStorage.setItem(\"courseID\", props.match.params.courseID);\r\n    \r\n    const [Contentdata,setContentData]=useState([]); \r\n    const fetchDocuments = ()=>{\r\n        fetch('/courses/'+sessionStorage.getItem(\"courseID\")+'/content/')\r\n        .then(res=>res.json())\r\n        .then(json=>setContentData(json));\r\n    }\r\n    useEffect(()=>{\r\n        fetchDocuments();\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"course-main\">\r\n            <Banner bannerData={GenData.Banner} user=\"Student\" />\r\n            <GenNav navData={GenData.stuNav} user=\"Student\" />\r\n            <Container className=\"course-cont\">\r\n                <Row>\r\n                    <Col>\r\n                        <CourseBody lectureInfo={Contentdata} title=\"Lectures\"/>\r\n                    </Col>\r\n                    <Col>\r\n                        <Schedule />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Course_main);","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Sections\\EvaluationSec.js",["279"],"import '../stu_main.css';\r\nimport React, {useState,useEffect} from 'react';\r\nimport Banner from \"../Home_Comp/Banner\";\r\nimport GenNav from \"../Home_Comp/GenNav\";\r\nimport CourseBody from \"../Course_Comp/CourseBody\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport StuData from \"../stu_db.json\";\r\nimport GenData from \"../gen_db.json\";\r\nimport {withRouter} from 'react-router';\r\n\r\nfunction EvaluationSec (props){\r\n    const [data,setData]=useState([]);\r\n    const [teacherList,setTeacherList]=useState([]);\r\n    const fetchInstructors = ()=>{\r\n        fetch('/courses/'+props.match.params.courseID+'/classList/teachers')\r\n        .then(res=>res.json())\r\n        .then(json=>setTeacherList(json));\r\n    }\r\n    const fetchStudents = ()=>{\r\n        fetch('/courses/sendEvaluations/'+props.match.params.courseID)\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n    }\r\n    useEffect(()=>{\r\n        fetchStudents();\r\n        fetchInstructors();\r\n    },[]);\r\n        return (\r\n            <div style={{textAlign:'center'}} className=\"course-main\">\r\n                <Banner bannerData={GenData.Banner} user=\"Student\" />\r\n                <GenNav navData={GenData.stuNav} user=\"Student\" />\r\n                <div className=\"contentBody\">\r\n                    <CourseBody evalInfo={StuData.EvaluationData} teacherInfo={teacherList} data={data} title=\"Evaluations\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default withRouter(EvaluationSec);","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Sections\\ContentSec.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Sections\\ClassListSec.js",["280","281","282"],"import '../stu_main.css';\r\nimport React, {useState,useEffect} from 'react';\r\nimport Banner from \"../Home_Comp/Banner\";\r\nimport GenNav from \"../Home_Comp/GenNav\";\r\nimport CourseBody from \"../Course_Comp/CourseBody\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport GenData from \"../gen_db.json\";\r\nimport {useParams, withRouter} from 'react-router';\r\n\r\nfunction ClassListSec (props){\r\n    const [data,setData]=useState([]); \r\n    const [stuData,setStuData]=useState([]);\r\n    const fetchInstructors = ()=>{\r\n        fetch('/courses/'+props.match.params.courseID+'/classList/teachers')\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n    }\r\n    useEffect(()=>{\r\n        fetchInstructors();\r\n        fetchStudents();\r\n    },[]);\r\n    const fetchStudents = ()=>{\r\n        fetch('/courses/'+props.match.params.courseID+'/classList/students')\r\n        .then(res=>res.json())\r\n        .then(json=>setStuData(json));\r\n    }\r\n\r\n     {\r\n        return (\r\n            <div style={{textAlign:'center'}} className=\"course-main\">\r\n                <Banner bannerData={GenData.Banner} user=\"Student\" />\r\n                <GenNav navData={GenData.stuNav} user=\"Student\" />\r\n                <div className=\"contentBody\">\r\n                    <CourseBody teacherInfo={data} studentInfo={stuData} title=\"Emails\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ClassListSec);","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\StuProflie.js",["283","284"],"import React, { useState, useEffect } from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport GenData from \"../gen_db.json\";\r\nimport Banner from './Banner';\r\nimport GenNav from './GenNav';\r\nimport '../stu_main.css';\r\n\r\nfunction StuProfile() {\r\n    const [profileData,setProfileData]=useState([]); \r\n    const [coursesData,setCoursesData]=useState([]);\r\n    var [temp,setTemp] = useState([]);\r\n    const fetchProfile = ()=>{\r\n        console.log(\"inside\");\r\n        fetch('/students/'+sessionStorage.getItem(\"stuID\")+'/profile/')\r\n        .then(res=>res.json())\r\n        .then(json=>setProfileData(json));\r\n    }\r\n    const fetchCourses = ()=>{\r\n        fetch('/students/'+sessionStorage.getItem(\"stuID\")+'/courseList/')\r\n        .then(res=>res.json())\r\n        .then(json=>setCoursesData(json));\r\n    }\r\n    useEffect(()=>{\r\n        fetchProfile();\r\n        fetchCourses();\r\n    },[]);\r\n    return (\r\n        <div>\r\n        {\r\n        profileData.map((item)=>(\r\n            <div>\r\n            <Banner bannerData={GenData.Banner} user=\"Student\" />\r\n            <GenNav navData={GenData.homeNav} />\r\n            <Container style={{textAlign: \"center\"}} fluid>\r\n                <h2 style={{margin: \"20px\"}}>{item.firstname} {item.lastname}</h2>\r\n                <Row style={{margin: \"20px\", padding: \"10px\"}}>\r\n                    <Col><b>Username:</b><br/>{item.username}</Col>\r\n                    <Col><b>Role:</b><br/>Student</Col>\r\n                    <Col><b>Email:</b><br/>{item.email}</Col>\r\n                </Row>\r\n                <Row className=\"enrolled\">\r\n                    <Col>\r\n                        <h4><b>Enrolled Courses</b></h4>\r\n                    </Col>\r\n                    <Col>\r\n                        {coursesData.map((data) => <h5>{data.courseid} - {data.name}</h5>)}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n        ))\r\n    }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default StuProfile;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsHome.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Sections\\DropboxSec.js",["285"],"import '../stu_main.css';\r\nimport React, {useState,useEffect} from 'react';\r\nimport Banner from \"../Home_Comp/Banner\";\r\nimport GenNav from \"../Home_Comp/GenNav\";\r\nimport CourseBody from \"../Course_Comp/CourseBody\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport StuData from \"../stu_db.json\";\r\nimport GenData from \"../gen_db.json\";\r\n\r\nfunction DropboxSec (props){\r\n    const [data, setData]= useState([]);\r\n    const fetchStudents = ()=>{\r\n        fetch('/grades/'+sessionStorage.getItem('DROPBOX').substring(26,29)+'/'+sessionStorage.getItem('DROPBOX').substring(9,14))\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n      }\r\n      useEffect(()=>{\r\n        fetchStudents();\r\n      },[]);\r\n        return (\r\n            <div style={{textAlign:'center'}} className=\"course-main\">\r\n                <Banner bannerData={GenData.Banner} user=\"Student\" />\r\n                <GenNav navData={GenData.stuNav} user=\"Student\" />\r\n                <div className=\"contentBody\">\r\n                    <CourseBody dropboxInfo={data} title=\"Dropboxes\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default DropboxSec;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsCourseHome.js",["286","287"],"import '../Stu-container/stu_main.css';\r\nimport './teacher_main.css';\r\nimport React,{useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Banner from \"../Stu-container/Home_Comp/Banner\";\r\nimport GenNav from \"../Stu-container/Home_Comp/GenNav\";\r\nimport InsCourse from \"./InsComp/InsCourse\";\r\nimport StuData from \"../Stu-container/stu_db.json\";\r\nimport GenData from \"../Stu-container/gen_db.json\";\r\n\r\nfunction InsCourseHome(props) {\r\n    return (\r\n        <div className=\"home-page\">\r\n            <Banner />\r\n            <GenNav navData={GenData.insNav} user=\"Teacher\"/>\r\n            <InsCourse courseInfo={StuData.courseData}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InsCourseHome;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\InsProfile.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\ContentPage.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\ClassListPage.js",["288"],"import React, {useState,useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport StuData from \"../../Stu-container/stu_db.json\";\r\nimport GenData from \"../../Stu-container/gen_db.json\";\r\nimport Banner from '../../Stu-container/Home_Comp/Banner';\r\nimport GenNav from '../../Stu-container/Home_Comp/GenNav';\r\nimport PageBody from './PageBody';\r\nimport '../../Stu-container/stu_main.css';\r\n\r\nfunction ClassListPage (){\r\n    const [data,setData] = useState([]);\r\n    const fetchStudents = ()=>{\r\n        fetch('/Instructor/ClassList/'+sessionStorage.getItem('teacherID')+'/'+sessionStorage.getItem('courseID'))\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n    }\r\n    useEffect(()=>{\r\n        fetchStudents();\r\n    },[]);\r\n        return (\r\n            <div style={{textAlign:'center'}} className=\"course-main\">\r\n                <Banner />\r\n                <GenNav navData={GenData.insNav} user=\"Teacher\" />\r\n                <div className=\"contentBody\">\r\n                    <PageBody classInfo={data} title=\"ClassList\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default ClassListPage;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\Schedule.js",["289"],"import '../stuTodo.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport Form from \"../Todo_Comp/Form\";\r\nimport TodoList from \"../Todo_Comp/TodoList\";\r\n\r\nfunction Schedule() {\r\n  // State\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState(\"all\");\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n  // Functions \r\n  const filterHandler = () => {\r\n    switch(status) {\r\n      case 'completed':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\r\n        break;\r\n      case 'uncompleted':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos);\r\n        break;\r\n    }\r\n  };\r\n  const saveLocalTodos = () => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  };\r\n  const getLocalTodos = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem('todos', JSON.stringify([]));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\r\n      setTodos(todoLocal);\r\n    }\r\n  };\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, []);\r\n  useEffect(() => {\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n  return (\r\n    <div className=\"studentTodo\">\r\n      <header>\r\n        <h1>Students Todo List</h1>\r\n      </header>\r\n      <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus}/>\r\n      <TodoList setTodos={setTodos} todos={todos} filteredTodos={filteredTodos}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\AssignmentPage.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\lib\\errorLib.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\PageBody.js",["290","291","292","293","294","295","296","297","298","299"],"import React, {useState} from 'react';\r\nimport '../../Stu-container/stu_main.css';\r\nimport Lecture from '../../Stu-container/Course_Comp/Lecture';\r\nimport GradeItem from '../EditComp/GradeItem';\r\nimport EmailList from '../../Stu-container/Course_Comp/EmailList';\r\nimport AddDoc from '../EditComp/AddDoc';\r\nimport DelDoc from '../EditComp/DelDoc';\r\nimport { Button} from 'react-bootstrap';\r\nimport FileDown from '../../Stu-container/Handling/FileDownload';\r\nimport { ButtonGroup, ToggleButton, Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction PageBody(props) {\r\n    const [student, setStudent] = useState();\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    if (props.title === \"Lectures\") {\r\n        return (\r\n            <div className=\"courseTitle\">\r\n                <h1><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                {props.lectureInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } \r\n                }).map((data) => <Lecture info={data} />)}\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Content\") {\r\n        console.log(props.docInfo);\r\n        return (\r\n            <div className=\"courseTitle\">\r\n                <h1><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                <AddDoc />\r\n                <DelDoc />\r\n                {props.lectureInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } else if (data.instructor.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => { <Container className=\"lecture\" fluid>\r\n            <Row>\r\n                <Col>\r\n                    <h3>{data.name}</h3>\r\n                    <p>{data.instructor}</p>\r\n                </Col>\r\n                <Col>\r\n                    <Button variant=\"outline-primary\"><FileDown />Download</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>})}\r\n                {props.docInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) =>  <Container className=\"lecture\" fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <h3>{data.document_name}</h3>\r\n                    </Col>\r\n                    <Col>\r\n                        <FileDown name={data.document_name}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>)}\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Assignments\") {\r\n        return (\r\n            <div>\r\n                <h1 className=\"courseTitle\"><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                <Container style={{background: '#d7e5f0', boxShadow: '1px 1px 3px'}} fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>Student ID</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>Assignment Name</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>File</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>Grade</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>Feedback</h4>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                {props.gradeInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data.assignment_name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } \r\n                }).map((data) => <GradeItem info={data} />)}\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"ClassList\") {\r\n        console.log(props.classInfo)\r\n        return (\r\n            <div>\r\n                <h1 className=\"courseTitle\"><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                <h4 className=\"emailsTitle\">Students</h4>\r\n                {props.classInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data.firstname.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } else if (data.lastname.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => <EmailList info={data} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageBody;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\Banner.js",["300"],"import React from 'react';\r\nimport {Container, Button, Row, Col} from \"react-bootstrap\";\r\nimport notification from '../Images/notification.png';\r\n\r\nfunction Banner(props) {\r\n    if (props.user === \"Student\") {\r\n        return (\r\n            <Container className=\"banner\" fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <Button className=\"profile-btn\" href={props.bannerData.profilePath+sessionStorage.getItem(\"stuID\")}>Profile</Button>\r\n                    </Col>\r\n                    <Col md={6}><h1>University of Calgary</h1></Col>\r\n                    <Col>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return (\r\n            <Container className=\"banner\" fluid>\r\n                <h1>University of Calgary</h1>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Banner;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\GenNav.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\InsComp\\InsCourse.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\containers\\components\\LoaderButton.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Todo_Comp\\Form.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Todo_Comp\\TodoList.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\CourseBody.js",["301","302","303","304","305"],"import React, {useState,useEffect} from 'react';\r\nimport '../stu_main.css';\r\nimport Lecture from './Lecture';\r\nimport Dropbox from './Dropbox';\r\nimport EmailList from './EmailList';\r\nimport Evaluation from './Evaluation';\r\nimport FileUp from '../Handling/FileUpload';\r\nimport { ButtonGroup, ToggleButton, Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction CourseBody(props) {\r\n    const [teacher, setTeacher] = useState();\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [data,setData] = useState([]);\r\n\r\n    const fetchStudents = ()=>{\r\n        fetch('/grades/'+sessionStorage.getItem('courseID')+'/'+sessionStorage.getItem('stuID') +'/finalgrade')\r\n        .then(res=>res.json())\r\n        .then(json=>setData(json));\r\n      }\r\n      useEffect(()=>{\r\n        fetchStudents();\r\n      },[]);\r\n\r\n    if (props.title === \"Lectures\") {\r\n        return (\r\n            <div className=\"courseTitle\">\r\n                <h1><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                {props.lectureInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data.name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } else if (data.instructor.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => <Lecture info={data} />)}\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Content\") {\r\n        return (\r\n            <div className=\"courseTitle\">\r\n                <h1><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                {props.docInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data.document_name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => <Lecture info={data} />)}\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Dropboxes\") {\r\n        sessionStorage.setItem(\"fileName\", \"N/A\");\r\n        return (\r\n            <div>\r\n                <h1 className=\"courseTitle\"><b>{props.title}</b></h1>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"File for Upload\"\r\n                    name=\"file\"\r\n                    onChange={(e) => sessionStorage.setItem(\"fileName\", e.target.value)}\r\n                />\r\n                <FileUp filename={searchTerm}/>\r\n                <Container style={{background: '#d7e5f0', boxShadow: '1px 1px 3px', marginTop: \"10px\"}} fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            <h4>File Name</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>Submission</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>Grade</h4>\r\n                        </Col>\r\n                        <Col>\r\n                            <h4>Feedback</h4>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                {props.dropboxInfo.map((data) => <Dropbox info={data} uploaded={searchTerm} />)}\r\n                <Container style={{background: '#d7e5f0', boxShadow: '1px 1px 3px', marginTop: \"10px\"}} fluid>\r\n                    <Row>\r\n                        <Col>\r\n                            Final Grade\r\n                        </Col>\r\n                        <Col>\r\n                            {data}%\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Evaluations\") {\r\n        return (\r\n            <div>\r\n                {\r\n            props.data.map((item)=>(\r\n              item['isEval'] === 1 ? (\r\n                  <>\r\n                <h1 className=\"courseTitle\"><b>{props.title}</b></h1>\r\n                <Container>\r\n                    <Row>\r\n                        <ButtonGroup>\r\n                            {props.teacherInfo.map((data, idx) => <Col><ToggleButton \r\n                                type=\"radio\" \r\n                                variant=\"outline-primary\" \r\n                                key={idx}\r\n                                name=\"radio\"\r\n                                id={`radio-${idx}`}\r\n                                value={data.tID}\r\n                                checked={teacher === data.tID}\r\n                                onClick={ (e) => sessionStorage.setItem('teacherName',data.firstname)}\r\n                                >\r\n                                {data.firstname} {data.lastname}\r\n                            </ToggleButton></Col>)}\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                </Container>\r\n                {props.evalInfo.map((data) => <Evaluation info={data} data={props.data} />)}\r\n                </>\r\n              ) : (\r\n                    <h4>There are no evaluations avaiable at this time</h4>\r\n              )\r\n              \r\n        ))\r\n        }\r\n            </div>\r\n        );\r\n    }\r\n    if (props.title === \"Emails\") {\r\n        return (\r\n            <div>\r\n                <h1 className=\"courseTitle\"><b>{props.title}</b></h1>\r\n                <input \r\n                    placeholder=\"Search...\" \r\n                    type=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={(e) => {\r\n                        setSearchTerm(e.target.value);\r\n                    }}\r\n                />\r\n                <h4 className=\"emailsTitle\">Instructors</h4>\r\n                {props.teacherInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data['firstname'].toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } else if (data['lastname'].toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => <EmailList info={data} />)}\r\n                <h4 className=\"emailsTitle\">Students</h4>\r\n                {props.studentInfo.filter((data) => {\r\n                    if (searchTerm === \"\") {\r\n                        return data;\r\n                    } else if (data['firstname'].toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    } else if (data['lastname'].toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                        return data;\r\n                    }\r\n                }).map((data) => <EmailList info={data} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseBody;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\Courses.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\Lecture.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\EmailList.js",["306"],"import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport '../stu_main.css';\r\n\r\nfunction EmailList(props) {\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col style={{marginBottom: \"5px\", border: \"1px solid #111\"}}>\r\n                    <h5>{props.info.firstname} {props.info.lastname}</h5>\r\n                </Col>\r\n                <Col style={{marginBottom: \"5px\", border: '1px solid #222'}}>\r\n                    <a href=\"#\">{props.info.email}</a>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default EmailList;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Handling\\FileDownload.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\EditComp\\DelDoc.js",["307"],"import React, {useState} from 'react';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport '../../Stu-container/stu_main.css';\r\n\r\nfunction DelDoc() {\r\n    const [docname, setName] = useState();\r\n\r\n    return (\r\n        <Container className=\"lecture\" fluid>\r\n            <Row>\r\n                <form>\r\n                    <input style={{margin: \"10px\"}} type=\"text\" name=\"name\" placeholder=\"Document Name\" onChange={(e) => setName(e.target.value)} />\r\n                    <Button onClick={async()=>{\r\n                        const newStuToAdd={docname};\r\n                        const response=await fetch('/teacher/'+sessionStorage.getItem('teacherID')+'/courses/'+sessionStorage.getItem('courseID')+'/content/',{\r\n                            method: \"DELETE\",\r\n                            headers:{\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            body: JSON.stringify(newStuToAdd)\r\n                        })\r\n                    }}>Delete</Button>\r\n                </form>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DelDoc;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\EditComp\\AddDoc.js",["308","309"],"import React, {useState} from 'react';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport '../../Stu-container/stu_main.css';\r\nimport FileUp from '../../Stu-container/Handling/FileUpload';\r\n\r\nfunction AddDoc() {\r\n    return (\r\n        <Container className=\"lecture\" fluid>\r\n            <Row>\r\n                <h4>Upload Documents Here</h4>\r\n                <form>\r\n                    <input style={{margin: \"10px\"}} type=\"text\" name=\"name\" placeholder=\"Document Name\" onChange={(e) => sessionStorage.setItem('fileName',e.target.value)} />\r\n                    {/* <input style={{margin: \"10px\"}} type=\"text\" name=\"type\" placeholder=\"Document Type\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} /> */}\r\n                    {/* <input style={{margin: \"10px\"}} type=\"text\" name=\"date\" placeholder=\"Time / Due Date\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} /> */}\r\n                </form>\r\n                <FileUp type=\"Teacher\"/>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AddDoc;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Ins-container\\EditComp\\GradeItem.js",["310","311"],"import React from 'react';\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { ButtonOr } from 'semantic-ui-react';\r\nimport FileDownload from '../../Stu-container/Handling/FileDownload';\r\nimport '../../Stu-container/stu_main.css';\r\n\r\nfunction GradeItem(props) {\r\n    return (\r\n        <Container style={{boxShadow: \"1px 1px 3px\", padding: \"10px\", marginTop: \"15px\"}} fluid>\r\n            <Row>\r\n                <Col>\r\n                    <p>{props.info.studentID}</p>\r\n                </Col>\r\n                <Col>\r\n                    <p>{props.info.assignment_name}</p>\r\n                </Col>\r\n                <Col>\r\n                    <FileDownload name={props.info.assignment_name}></FileDownload>\r\n                </Col>\r\n                <Col>\r\n                    <p>{props.info.grade}</p>\r\n                </Col>\r\n                <Col>\r\n                    <p>{props.info.feedback}</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Button onClick={(e) => document.getElementById(props.info.assignment_name).style.display = \"block\"}>Add Grade</Button>\r\n                </Col>\r\n                <Col>\r\n                    <form className=\"editGrade\" id={props.info.assignment_name}>\r\n                        <input style={{margin: \"10px\"}} type=\"text\" name=\"Grade\" placeholder=\"Grade\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n                        <input style={{margin: \"10px\"}} type=\"text\" name=\"Feedback\" placeholder=\"Feedback\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n                        <Button style={{margin: \"10px\"}} type=\"submit\" onClick={async()=>{\r\n                            const response=await fetch('/teacher/courses/grades',{\r\n                                method: \"POST\",\r\n                                headers: {\r\n                                    \"Content-type\": \"application/json; charset=UTF-8\" \r\n                                },\r\n                                body: JSON.stringify({\r\n                                    grade: sessionStorage.getItem(\"Grade\"),\r\n                                    feedback: sessionStorage.getItem(\"Feedback\"),\r\n                                    assignment_name: props.info.assignment_name,\r\n                                    stuID: props.info.studentID\r\n                              }\r\n                              )\r\n                            })\r\n                        }}>Enter Grade</Button>\r\n                        <Button style={{margin: \"10px\"}} onClick={() => document.getElementById(props.info.assignment_name).style.display = \"none\"} >Cancel</Button>\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default GradeItem;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Todo_Comp\\Todo.js",[],"C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Handling\\FileUpload.js",["312","313","314","315"],"import React, { useRef,useState,useEffect } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nfunction FileUpload(props) {\r\n    const fileRef = useRef();\r\n    const HandleChange = (e) => {\r\n      e.preventDefault();\r\n      const file = e.target.files[0];\r\n      let read = new FileReader();\r\n      read.readAsBinaryString(file);\r\n      read.onloadend = function(){\r\n        localStorage.setItem(sessionStorage.getItem(\"fileName\"), read.result.toString());\r\n      }\r\n    };\r\n\r\n    return (\r\n      props.type === \"Teacher\" ? (\r\n      <div>\r\n        <Button onClick={() => fileRef.current.click()}>\r\n          Upload\r\n        </Button>\r\n        <input\r\n          ref={fileRef}\r\n          onChange={HandleChange}\r\n          multiple={false}\r\n          type=\"file\"\r\n          hidden\r\n        />\r\n        <p id=\"flag\" style={{margin: \"5px\", display: \"none\"}}>Uploaded</p>\r\n        <Button \r\n         onClick={async()=>{\r\n           const response=await fetch('/teacher/'+sessionStorage.getItem('teacherID')+'/courses/'+sessionStorage.getItem('courseID')+'/content/',{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\" \r\n            },\r\n            body: JSON.stringify({\r\n              document_name: sessionStorage.getItem(\"fileName\"),\r\n              file: \"N/A\",\r\n              courseid: sessionStorage.getItem(\"courseID\"),\r\n              teacherid: sessionStorage.getItem('teacherID')\r\n          }\r\n          )\r\n        })\r\n          }\r\n        }>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n      ) : (\r\n        <div>\r\n        <Button onClick={() => fileRef.current.click()}>\r\n          Upload\r\n        </Button>\r\n        <input\r\n          ref={fileRef}\r\n          onChange={HandleChange}\r\n          multiple={false}\r\n          type=\"file\"\r\n          hidden\r\n        />\r\n        <p id=\"flag\" style={{margin: \"5px\", display: \"none\"}}>Uploaded</p>\r\n        <Button \r\n         onClick={async()=>{\r\n           const response=await fetch('/students/'+sessionStorage.getItem(\"stuID\")+'/courses/'+sessionStorage.getItem(\"courseID\")+'/dropbox/',{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\" \r\n            },\r\n            body: JSON.stringify({\r\n              assignment_name: sessionStorage.getItem(\"fileName\"),\r\n              due_date: \"2022/1/1\",\r\n              content: localStorage.getItem(sessionStorage.getItem(\"fileName\")),\r\n              courseid: sessionStorage.getItem(\"courseID\")\r\n          }\r\n          )\r\n        })\r\n          }\r\n        }>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n      )\r\n    );\r\n}\r\n\r\nexport default FileUpload;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Home_Comp\\CourseCard.js",["316"],"import React, { useState } from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport myimg from '../Images/crossroads.jpg';\r\nimport tack from \"../Images/tack.png\";\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nfunction CourseCard(props) {\r\n    const saveCourse = () => {sessionStorage.setItem(\"courseID\", props.info.courseid);};\r\n\r\n    if (props.user === \"Teach\") {\r\n        return (\r\n            <BrowserRouter>\r\n            <Card className=\"course-card\" style={{width: '16rem'}}>\r\n                <Card.Img className=\"card-img\" variatn=\"top\" src={myimg} alt=\"Course Img\"></Card.Img>\r\n                <Card.Body>\r\n                    <Card.Title>{props.info.courseid} {props.info.name}<Button variant=\"outline\"><img className=\"pin-btn\" src={tack} alt=\"Pin\"/></Button></Card.Title>\r\n                    <Card.Text><p>{props.info.time}</p></Card.Text>\r\n                    <Button onClick={saveCourse} href={\"/InsHome/\"+sessionStorage.getItem(\"teacherID\")+\"/\"+props.info.courseid} variant=\"outline-primary\">SELECT</Button>\r\n                </Card.Body>\r\n            </Card>\r\n            </BrowserRouter>\r\n        );\r\n    } else {\r\n        return (\r\n            <BrowserRouter>\r\n            <Card className=\"course-card\" style={{width: '16rem'}}>\r\n                <Card.Img className=\"card-img\" variatn=\"top\" src={myimg} alt=\"Course Img\"></Card.Img>\r\n                <Card.Body>\r\n                    <Card.Title>{props.info.courseid} {props.info.name}<Button variant=\"outline\"><img className=\"pin-btn\" src={tack} alt=\"Pin\"/></Button></Card.Title>\r\n                    <Card.Text><p>{props.info.time}</p></Card.Text>\r\n                    <Button href={\"/StuHome/\"+sessionStorage.getItem(\"stuID\")+\"/course_main/\"+props.info.courseid} variant=\"outline-primary\">SELECT</Button>\r\n                </Card.Body>\r\n            </Card>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseCard;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\Evaluation.js",["317","318"],"import React,{useState} from 'react';\r\nimport { Button, Container, Row, Form } from 'react-bootstrap';\r\n\r\nfunction Evaluation(props) {\r\n    return (\r\n        <div>{\r\n            props.data.map((item)=>(\r\n              item['isEval'] === 1 ? (\r\n                <Form>\r\n                <Container style={{borderRadius: \"5px\", boxShadow: \"2px 2px 5px\"}}>\r\n                    <Row>\r\n                        <label>\r\n      \r\n                            Q1 The TA starts the lab session on time:<br/>\r\n                            <input style={{margin: \"10px\"}}  type=\"number\" min=\"0\" max=\"10\" name=\"q1\" placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Q2 The TA uses the time of the lab effectively:<br/>\r\n                            <input style={{margin: \"10px\"}} type=\"number\" name=\"q2\"min=\"0\" max=\"10\" placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Q3 The TA answers the questions satisfactorily:<br/>\r\n                            <input style={{margin: \"10px\"}} type=\"number\" name=\"q3\" min=\"0\" max=\"10\"placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Q4 The TA marks the assignments fairly:<br/>\r\n                            <input style={{margin: \"10px\"}} type=\"number\" name=\"q4\" min=\"0\" max=\"10\" placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Q5 The TA marks the assignments on time:<br/>\r\n                            <input style={{margin: \"10px\"}} type=\"number\" name=\"q5\" min=\"0\" max=\"10\" placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Q6 The TA posts the solutions on time:<br/>\r\n                            <input style={{margin: \"10px\"}} type=\"number\" name=\"q6\"min=\"0\" max=\"10\" placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Q7 The TA demonstrated enough knowledge of the material covered:<br/>\r\n\r\n                            <input style={{margin: \"10px\"}} type=\"number\" name=\"q7\" min=\"0\" max=\"10\" placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Q8 The TA responses to emails and messages on time:<br/>\r\n\r\n                            <input style={{margin: \"10px\"}} type=\"number\" name=\"q8\" min=\"0\" max=\"10\" placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Q9 The TA treats the students respectfully:<br/>\r\n\r\n                            <input style={{margin: \"10px\"}} type=\"number\" name=\"q9\" min=\"0\" max=\"10\" placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Q10 I will be happy to have the same TA again:<br/>\r\n\r\n                            <input style={{margin: \"10px\"}} type=\"number\" name=\"q10\" min=\"0\" max=\"10\" placeholder=\"Rating\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n                        </label>\r\n                    </Row>\r\n                    <Row>\r\n                        <label>\r\n                            Comments:<br/>\r\n                            <input style={{margin: \"10px\"}} type=\"text\" name=\"comments\" maxLength=\"100\" placeholder=\"Comments\" onChange={(e) => sessionStorage.setItem(e.target.name, e.target.value)} />\r\n                        </label>\r\n                    </Row>\r\n                </Container>\r\n                <Button style={{margin: \"20px\"}} type=\"submit\"  onClick={async()=>{\r\n        const newStuToAdd={teacherName: sessionStorage.getItem('teacherName'),q1: sessionStorage.getItem('q1'),q2: sessionStorage.getItem('q2'),q3: sessionStorage.getItem('q3'),q4 :sessionStorage.getItem('q4'),q5: sessionStorage.getItem('q5'),q6: sessionStorage.getItem('q6'),q7: sessionStorage.getItem('q7'),q8: sessionStorage.getItem('q8')\r\n                            ,q9: sessionStorage.getItem('q9'),q10: sessionStorage.getItem('q10'),comments: sessionStorage.getItem('comments')};\r\n        const response=await fetch('/evaluations/'+sessionStorage.getItem('DROPBOX').substring(26,29)+'/'+sessionStorage.getItem('DROPBOX').substring(9,13),{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newStuToAdd)   \r\n        })\r\n    }}> Submit</Button>\r\n            </Form>\r\n              ) : (\r\n                    console.log(\"else\")\r\n              )\r\n              \r\n        ))\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Evaluation;","C:\\Users\\ywang\\Documents\\ThirdYearF2021\\CPSC471\\471Project\\Final Version\\Learning-Management-System\\src\\Stu-container\\Course_Comp\\Dropbox.js",[],{"ruleId":"319","severity":1,"message":"320","line":7,"column":9,"nodeType":"321","messageId":"322","endLine":7,"endColumn":16},{"ruleId":"323","severity":1,"message":"324","line":33,"column":39,"nodeType":"325","messageId":"326","endLine":33,"endColumn":40},{"ruleId":"323","severity":1,"message":"324","line":34,"column":46,"nodeType":"325","messageId":"326","endLine":34,"endColumn":47},{"ruleId":"323","severity":1,"message":"324","line":33,"column":46,"nodeType":"325","messageId":"326","endLine":33,"endColumn":47},{"ruleId":"327","severity":1,"message":"328","line":36,"column":5,"nodeType":"329","endLine":36,"endColumn":7,"suggestions":"330"},{"ruleId":"319","severity":1,"message":"331","line":96,"column":15,"nodeType":"321","messageId":"322","endLine":96,"endColumn":23},{"ruleId":"319","severity":1,"message":"331","line":119,"column":15,"nodeType":"321","messageId":"322","endLine":119,"endColumn":23},{"ruleId":"319","severity":1,"message":"331","line":139,"column":15,"nodeType":"321","messageId":"322","endLine":139,"endColumn":23},{"ruleId":"327","severity":1,"message":"332","line":13,"column":7,"nodeType":"329","endLine":13,"endColumn":9,"suggestions":"333"},{"ruleId":"319","severity":1,"message":"334","line":18,"column":10,"nodeType":"321","messageId":"322","endLine":18,"endColumn":15},{"ruleId":"327","severity":1,"message":"335","line":38,"column":5,"nodeType":"329","endLine":38,"endColumn":7,"suggestions":"336"},{"ruleId":"323","severity":1,"message":"324","line":70,"column":42,"nodeType":"325","messageId":"326","endLine":70,"endColumn":43},{"ruleId":"319","severity":1,"message":"331","line":111,"column":15,"nodeType":"321","messageId":"322","endLine":111,"endColumn":23},{"ruleId":"319","severity":1,"message":"331","line":139,"column":15,"nodeType":"321","messageId":"322","endLine":139,"endColumn":23},{"ruleId":"319","severity":1,"message":"331","line":160,"column":15,"nodeType":"321","messageId":"322","endLine":160,"endColumn":23},{"ruleId":"319","severity":1,"message":"331","line":180,"column":15,"nodeType":"321","messageId":"322","endLine":180,"endColumn":23},{"ruleId":"327","severity":1,"message":"332","line":17,"column":7,"nodeType":"329","endLine":17,"endColumn":9,"suggestions":"337"},{"ruleId":"323","severity":1,"message":"324","line":42,"column":34,"nodeType":"325","messageId":"326","endLine":42,"endColumn":35},{"ruleId":"327","severity":1,"message":"332","line":13,"column":7,"nodeType":"329","endLine":13,"endColumn":9,"suggestions":"338"},{"ruleId":"319","severity":1,"message":"339","line":2,"column":18,"nodeType":"321","messageId":"322","endLine":2,"endColumn":27},{"ruleId":"319","severity":1,"message":"340","line":3,"column":10,"nodeType":"321","messageId":"322","endLine":3,"endColumn":14},{"ruleId":"319","severity":1,"message":"341","line":10,"column":19,"nodeType":"321","messageId":"322","endLine":10,"endColumn":30},{"ruleId":"319","severity":1,"message":"342","line":11,"column":12,"nodeType":"321","messageId":"322","endLine":11,"endColumn":16},{"ruleId":"319","severity":1,"message":"343","line":11,"column":17,"nodeType":"321","messageId":"322","endLine":11,"endColumn":24},{"ruleId":"319","severity":1,"message":"344","line":12,"column":5,"nodeType":"321","messageId":"322","endLine":12,"endColumn":13},{"ruleId":"319","severity":1,"message":"331","line":17,"column":15,"nodeType":"321","messageId":"322","endLine":17,"endColumn":23},{"ruleId":"319","severity":1,"message":"345","line":6,"column":8,"nodeType":"321","messageId":"322","endLine":6,"endColumn":14},{"ruleId":"346","severity":1,"message":"347","line":13,"column":5,"nodeType":"348","messageId":"349","endLine":13,"endColumn":203},{"ruleId":"327","severity":1,"message":"350","line":27,"column":7,"nodeType":"329","endLine":27,"endColumn":9,"suggestions":"351"},{"ruleId":"319","severity":1,"message":"352","line":8,"column":9,"nodeType":"321","messageId":"322","endLine":8,"endColumn":18},{"ruleId":"327","severity":1,"message":"350","line":21,"column":7,"nodeType":"329","endLine":21,"endColumn":9,"suggestions":"353"},{"ruleId":"346","severity":1,"message":"347","line":28,"column":6,"nodeType":"348","messageId":"349","endLine":38,"endColumn":6},{"ruleId":"319","severity":1,"message":"354","line":11,"column":10,"nodeType":"321","messageId":"322","endLine":11,"endColumn":14},{"ruleId":"319","severity":1,"message":"355","line":11,"column":15,"nodeType":"321","messageId":"322","endLine":11,"endColumn":22},{"ruleId":"319","severity":1,"message":"356","line":7,"column":8,"nodeType":"321","messageId":"322","endLine":7,"endColumn":15},{"ruleId":"319","severity":1,"message":"357","line":3,"column":15,"nodeType":"321","messageId":"322","endLine":3,"endColumn":23},{"ruleId":"319","severity":1,"message":"339","line":3,"column":24,"nodeType":"321","messageId":"322","endLine":3,"endColumn":33},{"ruleId":"319","severity":1,"message":"356","line":3,"column":8,"nodeType":"321","messageId":"322","endLine":3,"endColumn":15},{"ruleId":"327","severity":1,"message":"358","line":45,"column":6,"nodeType":"329","endLine":45,"endColumn":21,"suggestions":"359"},{"ruleId":"319","severity":1,"message":"360","line":10,"column":10,"nodeType":"321","messageId":"322","endLine":10,"endColumn":21},{"ruleId":"319","severity":1,"message":"361","line":10,"column":23,"nodeType":"321","messageId":"322","endLine":10,"endColumn":35},{"ruleId":"319","severity":1,"message":"362","line":13,"column":12,"nodeType":"321","messageId":"322","endLine":13,"endColumn":19},{"ruleId":"319","severity":1,"message":"363","line":13,"column":21,"nodeType":"321","messageId":"322","endLine":13,"endColumn":31},{"ruleId":"364","severity":1,"message":"365","line":28,"column":50,"nodeType":"366","messageId":"367","endLine":28,"endColumn":52},{"ruleId":"364","severity":1,"message":"365","line":53,"column":50,"nodeType":"366","messageId":"367","endLine":53,"endColumn":52},{"ruleId":"364","severity":1,"message":"368","line":61,"column":31,"nodeType":"366","messageId":"369","endLine":61,"endColumn":33},{"ruleId":"364","severity":1,"message":"365","line":72,"column":46,"nodeType":"366","messageId":"367","endLine":72,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":122,"column":48,"nodeType":"366","messageId":"367","endLine":122,"endColumn":50},{"ruleId":"364","severity":1,"message":"365","line":146,"column":48,"nodeType":"366","messageId":"367","endLine":146,"endColumn":50},{"ruleId":"319","severity":1,"message":"370","line":3,"column":8,"nodeType":"321","messageId":"322","endLine":3,"endColumn":20},{"ruleId":"319","severity":1,"message":"371","line":11,"column":21,"nodeType":"321","messageId":"322","endLine":11,"endColumn":31},{"ruleId":"364","severity":1,"message":"365","line":36,"column":50,"nodeType":"366","messageId":"367","endLine":36,"endColumn":52},{"ruleId":"364","severity":1,"message":"365","line":60,"column":46,"nodeType":"366","messageId":"367","endLine":60,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":162,"column":50,"nodeType":"366","messageId":"367","endLine":162,"endColumn":52},{"ruleId":"364","severity":1,"message":"365","line":172,"column":50,"nodeType":"366","messageId":"367","endLine":172,"endColumn":52},{"ruleId":"372","severity":1,"message":"373","line":13,"column":21,"nodeType":"374","endLine":13,"endColumn":33},{"ruleId":"319","severity":1,"message":"331","line":15,"column":31,"nodeType":"321","messageId":"322","endLine":15,"endColumn":39},{"ruleId":"319","severity":1,"message":"357","line":1,"column":16,"nodeType":"321","messageId":"322","endLine":1,"endColumn":24},{"ruleId":"319","severity":1,"message":"375","line":2,"column":10,"nodeType":"321","messageId":"322","endLine":2,"endColumn":16},{"ruleId":"319","severity":1,"message":"376","line":3,"column":10,"nodeType":"321","messageId":"322","endLine":3,"endColumn":18},{"ruleId":"319","severity":1,"message":"331","line":36,"column":35,"nodeType":"321","messageId":"322","endLine":36,"endColumn":43},{"ruleId":"319","severity":1,"message":"357","line":1,"column":24,"nodeType":"321","messageId":"322","endLine":1,"endColumn":32},{"ruleId":"319","severity":1,"message":"339","line":1,"column":33,"nodeType":"321","messageId":"322","endLine":1,"endColumn":42},{"ruleId":"319","severity":1,"message":"331","line":32,"column":18,"nodeType":"321","messageId":"322","endLine":32,"endColumn":26},{"ruleId":"319","severity":1,"message":"331","line":65,"column":18,"nodeType":"321","messageId":"322","endLine":65,"endColumn":26},{"ruleId":"319","severity":1,"message":"357","line":1,"column":17,"nodeType":"321","messageId":"322","endLine":1,"endColumn":25},{"ruleId":"319","severity":1,"message":"357","line":1,"column":15,"nodeType":"321","messageId":"322","endLine":1,"endColumn":23},{"ruleId":"319","severity":1,"message":"331","line":91,"column":15,"nodeType":"321","messageId":"322","endLine":91,"endColumn":23},"no-unused-vars","'onError' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchStuCourses', 'fetchStuData', and 'fetchinstructors'. Either include them or remove the dependency array.","ArrayExpression",["377"],"'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchinstructors'. Either include it or remove the dependency array.",["378"],"'dupli' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchStuCourses', 'fetchStuData', and 'fetchStudents'. Either include them or remove the dependency array.",["379"],["380"],["381"],"'useEffect' is defined but never used.","'Form' is defined but never used.","'setCourseid' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'courseid' is assigned a value but never used.","'GenNav' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'fetchInstructors' and 'fetchStudents'. Either include them or remove the dependency array.",["382"],"'useParams' is defined but never used.",["383"],"'temp' is assigned a value but never used.","'setTemp' is assigned a value but never used.","'StuData' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.",["384"],"'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'student' is assigned a value but never used.","'setStudent' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","'notification' is defined but never used.","'setTeacher' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","'ButtonOr' is defined but never used.",{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"387","fix":"391"},{"desc":"387","fix":"392"},{"desc":"393","fix":"394"},{"desc":"393","fix":"395"},{"desc":"396","fix":"397"},"Update the dependencies array to be: [fetchStuCourses, fetchStuData, fetchinstructors]",{"range":"398","text":"399"},"Update the dependencies array to be: [fetchinstructors]",{"range":"400","text":"401"},"Update the dependencies array to be: [fetchStuCourses, fetchStuData, fetchStudents]",{"range":"402","text":"403"},{"range":"404","text":"401"},{"range":"405","text":"401"},"Update the dependencies array to be: [fetchInstructors, fetchStudents]",{"range":"406","text":"407"},{"range":"408","text":"407"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"409","text":"410"},[1187,1189],"[fetchStuCourses, fetchStuData, fetchinstructors]",[386,388],"[fetchinstructors]",[1227,1229],"[fetchStuCourses, fetchStuData, fetchStudents]",[510,512],[388,390],[973,975],"[fetchInstructors, fetchStudents]",[749,751],[1288,1303],"[todos, status, filterHandler, saveLocalTodos]"]